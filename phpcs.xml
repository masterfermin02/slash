<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="pcsg-generated-ruleset">
	<description>Created with the PHP Coding Standard Generator. http://edorian.github.com/php-coding-standard-generator/</description>
	<arg name="tab-width" value="4"/>

	<!--
		Generic
	-->

	<rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
	<rule ref="Generic.Classes.DuplicateClassName"/>
	<rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
	<rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
	<rule ref="Generic.ControlStructures.InlineControlStructure"/>
	<rule ref="Generic.Files.LineEndings"/>
	<rule ref="Generic.Formatting.DisallowMultipleStatements">
		<exclude name="Generic.Formatting.DisallowMultipleStatements.SameLine"/>
	</rule>
	<rule ref="Generic.Formatting.SpaceAfterCast"/>
	<rule ref="Generic.Functions.CallTimePassByReference"/>
	<rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman"/>
	<rule ref="Generic.Metrics.CyclomaticComplexity">
		<properties>
			<property name="complexity" value="6"/>
			<property name="absoluteComplexity" value="10"/>
		</properties>
	</rule>
	<rule ref="Generic.Metrics.NestingLevel">
		<properties>
			<property name="nestingLevel" value="3"/>
			<property name="absoluteNestingLevel" value="5"/>
		</properties>
	</rule>
	<rule ref="Generic.NamingConventions.CamelCapsFunctionName"/>
	<rule ref="Generic.NamingConventions.ConstructorName"/>
	<rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
	<rule ref="Generic.PHP.DeprecatedFunctions"/>
	<rule ref="Generic.PHP.DisallowShortOpenTag"/>
	<rule ref="Generic.PHP.ForbiddenFunctions"/>
	<rule ref="Generic.PHP.LowerCaseConstant"/>
	<rule ref="Generic.Strings.UnnecessaryStringConcat"/>
	<rule ref="Generic.WhiteSpace.DisallowSpaceIndent"/>
	<rule ref="Generic.WhiteSpace.DisallowSpaceIndent"/>
	<rule ref="Generic.WhiteSpace.ScopeIndent">
		<properties>
			<property name="indent" value="4"/>
			<property name="tabIndent" value="true"/>
		</properties>
	</rule>

	<!--
		PSR1
	-->

	<rule ref="PSR1.Classes.ClassDeclaration">
		<exclude name="PSR1.Classes.ClassDeclaration.MissingNamespace"/>
	</rule>
	<rule ref="PSR1.Files.SideEffects"/>

	<!--
		PSR2
	-->

	<rule ref="PSR2">
		<exclude name="Generic.WhiteSpace.DisallowTabIndent"/>
	</rule>
	<rule ref="PSR2.Classes.ClassDeclaration"/>
	<rule ref="PSR2.Classes.PropertyDeclaration"/>
	<rule ref="PSR2.ControlStructures.ControlStructureSpacing"/>
	<rule ref="PSR2.ControlStructures.SwitchDeclaration"/>
	<rule ref="PSR2.Files.EndFileNewline"/>
	<rule ref="PSR2.Methods.MethodDeclaration"/>
	<rule ref="PSR2.Namespaces.NamespaceDeclaration"/>
	<rule ref="PSR2.Namespaces.UseDeclaration"/>

	<!--
		Squiz
	-->

	<rule ref="Squiz.Classes.ValidClassName">
		<exclude name="Squiz.Classes.ValidClassName.NotCamelCaps"/>
	</rule>
	<rule ref="Squiz.ControlStructures.ControlSignature">
		<exclude name="Squiz.ControlStructures.ControlSignature.SpaceAfterCloseBrace"/>
	</rule>
	<rule ref="Squiz.Functions.MultiLineFunctionDeclaration">
		<exclude name="Squiz.Functions.MultiLineFunctionDeclaration.ContentAfterBrace"/>
		<exclude name="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBetween"/>
	</rule>
	<rule ref="Squiz.PHP.CommentedOutCode">
		<exclude name="Squiz.PHP.CommentedOutCode.Found"/>
		<exclude-pattern>*Test.php</exclude-pattern>
	</rule>
	<rule ref="Squiz.PHP.DisallowSizeFunctionsInLoops"/>
	<rule ref="Squiz.PHP.DiscouragedFunctions"/>
	<rule ref="Squiz.PHP.GlobalKeyword"/>
	<rule ref="Squiz.PHP.InnerFunctions"/>
	<rule ref="Squiz.PHP.LowercasePHPFunctions"/>
	<rule ref="Squiz.PHP.NonExecutableCode"/>
	<rule ref="Squiz.Scope.MemberVarScope"/>
	<rule ref="Squiz.Scope.MethodScope"/>
	<rule ref="Squiz.Scope.StaticThisUsage"/>
	<rule ref="Squiz.WhiteSpace.ControlStructureSpacing"/>
	<rule ref="Squiz.WhiteSpace.FunctionOpeningBraceSpace"/>
	<rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
	<rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
	<rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing">
		<exclude name="Squiz.WhiteSpace.ObjectOperatorSpacing.Before"/>
	</rule>
	<rule ref="Squiz.WhiteSpace.OperatorSpacing"/>
	<rule ref="Squiz.WhiteSpace.ScopeClosingBrace">
		<exclude name="Squiz.WhiteSpace.ScopeClosingBrace.ContentBefore"/>
	</rule>
	<rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>
	<rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
	<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>

	<!--
		PEAR
	-->

	<rule ref="PEAR.Classes.ClassDeclaration"/>
	<rule ref="PEAR.Commenting.FunctionComment">
		<exclude-pattern>*Test.php</exclude-pattern>
		<exclude name="PEAR.Commenting.FunctionComment.SpacingAfterParamType"/>
		<exclude name="PEAR.Commenting.FunctionComment.SpacingAfterParamName"/>
		<exclude name="PEAR.Commenting.FunctionComment.Missing"/>
		<exclude name="PEAR.Commenting.FunctionComment.MissingParamComment"/>
		<exclude name="PEAR.Commenting.FunctionComment.ExtraParamComment" />
	</rule>
	<rule ref="PEAR.Commenting.InlineComment"/>
	<rule ref="PEAR.ControlStructures.ControlSignature">
		<exclude name="PEAR.ControlStructures.ControlSignature.Found"/>
	</rule>
	<rule ref="PEAR.ControlStructures.MultiLineCondition"/>
	<rule ref="PEAR.Files.IncludingFile"/>
	<rule ref="PEAR.Formatting.MultiLineAssignment"/>
	<rule ref="PEAR.Functions.FunctionCallSignature">
		<exclude name="PEAR.Functions.FunctionCallSignature.CloseBracketLine"/>
		<exclude name="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket"/>
	</rule>
	<rule ref="PEAR.Functions.FunctionDeclaration">
		<exclude name="PEAR.Functions.FunctionDeclaration.ContentAfterBrace"/>
	</rule>
	<rule ref="PEAR.Functions.ValidDefaultValue"/>
	<rule ref="PEAR.NamingConventions.ValidClassName">
		<exclude name="PEAR.NamingConventions.ValidClassName.StartWithCapital"/>
		<exclude name="PEAR.NamingConventions.ValidClassName.Invalid"/>
	</rule>
	<rule ref="PEAR.WhiteSpace.ObjectOperatorIndent"/>
	<rule ref="PEAR.WhiteSpace.ScopeClosingBrace">
		<exclude name="PEAR.WhiteSpace.ScopeClosingBrace.Line"/>
	</rule>
	<rule ref="PEAR.WhiteSpace.ScopeIndent"/>

	<!--
		Zend
	-->

	<rule ref="Zend.Files.ClosingTag"/>

	<!--
		MySource
	-->

	<rule ref="MySource.PHP.EvalObjectFactory"/>

</ruleset>
